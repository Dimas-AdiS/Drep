






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3973

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","metho






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3973

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","metho






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3973

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","metho






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3973

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","metho






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3973

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","metho






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":40,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\n// char *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\nchar *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":40,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\n// char *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\nchar *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":40,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\n// char *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\nchar *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":40,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\n// char *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\nchar *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11772,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":40,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\n// char *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\nchar *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":5736,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":42,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":5736,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":42,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":5736,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":42,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":5736,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":42,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3064

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":5736,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4022

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":42,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":16928,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4021

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":16928,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4021

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":16928,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4021

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":16928,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4021

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}






Started logging.

<<<
Content-Length: 3065

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":16928,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"d:\\USM\\USEROS2023\\Arduino\\Joystick-ESP32-NEW","rootUri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW","name":"Joystick-ESP32-NEW"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.4"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4021

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Joystick-ESP32-NEW.ino","languageId":"cpp","version":1,"text":"#include <Ps3Controller.h> \r\n#include <EEPROM.h>\r\n#include \"Variabel.h\" \r\n\r\n#define ledPin 2\r\n#define pinSetting 0\r\n\r\n#define ledON digitalWrite(ledPin, HIGH)\r\n#define ledOFF digitalWrite(ledPin, LOW)\r\n\r\n//char *MAC = \"78:dd:08:65:53:bb\"; //UUS\r\n//char *MAC = \"40:22:d8:5f:0b:26\"; //ERO\r\nchar *MAC = \"78:dd:08:65:53:ba\"; //ROS\r\n//char *MAC = \"ba:e7:b2:2d:22:ae\"; //stikku  \r\n// char *MAC = \"82:00:23:d7:ca:49\"; //xbox\r\n \r\nbool btnPress = 0;\r\n\r\nvoid onConnect() {\r\n  Serial.println(\"Connected!.\");  \r\n  Ps3.setPlayer(1);\r\n  ledON;\r\n}\r\n\r\nvoid notify() {  \r\n  xR =Ps3.data.analog.stick.rx;  // Right stick - x axis\r\n  yR =-Ps3.data.analog.stick.ry;  // Right stick  - y axis\r\n  xL =Ps3.data.analog.stick.lx;  // Left stick - x axis\r\n  yL =-Ps3.data.analog.stick.ly;  // Left stick  - y axis \r\n\r\n  X = Ps3.data.button.cross;\r\n  S = Ps3.data.button.square;\r\n  T = Ps3.data.button.triangle;\r\n  C = Ps3.data.button.circle;\r\n\r\n  up = Ps3.data.button.up;\r\n  dw = Ps3.data.button.down;\r\n  lf = Ps3.data.button.left;\r\n  rg = Ps3.data.button.right;\r\n  \r\n  L1 = Ps3.data.button.l1;\r\n  L2 = Ps3.data.button.l2;\r\n  L3 = Ps3.data.button.l3; \r\n  R1 = Ps3.data.button.r1;\r\n  R2 = Ps3.data.button.r2;\r\n  R3 = Ps3.data.button.r3;  \r\n  \r\n  AL2 = Ps3.data.analog.button.l2; \r\n  AR2 = Ps3.data.analog.button.r2;\r\n  \r\n  SELECT = Ps3.data.button.select;\r\n  START = Ps3.data.button.start; \r\n\r\n  BATT = Ps3.data.status.battery;\r\n}\r\n\r\nvoid setup() {\r\n  Serial.begin(9600);\r\n  Serial2.begin(9600);\r\n  pinMode(ledPin, OUTPUT);\r\n  pinMode(pinSetting, INPUT_PULLUP);\r\n  \r\n  Ps3.attach(notify);\r\n  Ps3.attachOnConnect(onConnect);\r\n  \r\n  Ps3.begin(MAC); \r\n  \r\n  EEPROM.begin(1023); \r\n  EEPROM.get(addEE, EE); \r\n  \r\n  ledON;\r\n  delay(200);\r\n  ledOFF;\r\n  delay(200);\r\n}\r\n\r\nlong int timerBlinking = 0;\r\n\r\nvoid loop() {      \r\n  joyConnect = Ps3.isConnected();\r\n  if(joyConnect){   \r\n\r\n    if(btnPress == 1){\r\n      timerBlinking = millis();\r\n      ledOFF;\r\n      btnPress = 0;      \r\n    } else if(millis() - timerBlinking > 50){\r\n      ledON;        \r\n    }\r\n    \r\n    dataTombol = L2<<15 | L1<<14 | R2<<13 | R1<<12 | up<<11 | dw<<10 | lf<<9 | rg<<8 | T<<7 | X<<6 | S<<5 | C<<4 | SELECT<<3 | START<<2 | L3<<1 | R3;\r\n\r\n    if(dataTombol>0){\r\n      btnPress = 1;\r\n    }\r\n//    Serial.write('x');\r\n//    Serial.print(xL);\r\n//    Serial.write('y');\r\n//    Serial.print(yL);\r\n//    Serial.write('X');\r\n//    Serial.print(xR);\r\n//    Serial.write('Y');\r\n//    Serial.print(yR);\r\n//    Serial.write('B'); \r\n//    Serial.println(dataTombol); \r\n//\r\n//    Serial2.write('x');\r\n//    Serial2.print(xL);\r\n//    Serial2.write('y');\r\n//    Serial2.print(yL);\r\n//    Serial2.write('X');\r\n//    Serial2.print(xR);\r\n//    Serial2.write('Y');\r\n//    Serial2.print(yR);\r\n//    Serial2.write('B'); \r\n//    Serial2.println(dataTombol); \r\n    \r\n//    Serial2.println();    \r\n\r\n    if(Serial.read()=='*'){\r\n      Serial.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial.print(dataTombol);\r\n      Serial.println(\"#$\"); \r\n   }\r\n   if(Serial2.read()=='*'){ \r\n      Serial2.print(str(\"#\") + xL + str(\"#\") + yL + str(\"#\") + xR + str(\"#\") + yR + str(\"#\"));\r\n      Serial2.print(dataTombol);\r\n      Serial2.println(\"#$\");    \r\n    }\r\n    \r\n  } else {\r\n    xL=0; yL=0; xR=0; yR=0;\r\n    X=0; S=0; T=0; C=0;\r\n    up=0; dw=0; lf=0; rg=0;\r\n    L1=0; L2=0; L3=0; R1=0; R2=0; R3=0; AL2=0; AR2=0;\r\n    SELECT=0; START=0;   \r\n    BATT=0; \r\n    pwmX=0; pwmY=0; pwmW=0; maxPWM=0;\r\n    ledOFF;\r\n  }  \r\n   \r\n//  delay(10);\r\n}\r\n"}}}Content-Length: 1845

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Motor.ino","languageId":"cpp","version":1,"text":"//  M1 = motot kanan depan\r\n//  M2 = motot kanan belakang\r\n//  M3 = motot kiri belakang\r\n//  M4 = motot kiri depan\r\nint derM1 = 45, derM2 = 315, derM3 = 225, derM4 = 135;\r\n\r\nfloat vM1,vM2,vM3,vM4;\r\nvoid robotMove(int X, int Y, int W, int G, int maxx){   \r\n  float  v1, v2, v3, v4, tV1, tV2, tV3, tV4;\r\n\r\n  vM1 = -(sin(radians(derM1)) * X) + (cos(radians(derM1)) * Y) + (W + G);\r\n  vM2 = -(sin(radians(derM2)) * X) + (cos(radians(derM2)) * Y) + (W + G);\r\n  vM3 = -(sin(radians(derM3)) * X) + (cos(radians(derM3)) * Y) + (W + G);\r\n  vM4 = -(sin(radians(derM4)) * X) + (cos(radians(derM4)) * Y) + (W + G);\r\n   \r\n  v1 = abs(vM1);\r\n  v2 = abs(vM2);\r\n  v3 = abs(vM3);\r\n  v4 = abs(vM4);\r\n\r\n  if(vM1>0){tV1=1;} else{tV1=-1;}\r\n  if(vM2>0){tV2=1;} else{tV2=-1;}\r\n  if(vM3>0){tV3=1;} else{tV3=-1;}\r\n  if(vM4>0){tV4=1;} else{tV4=-1;}\r\n\r\n  if(v1>v2 && v1>v3 && v1>v4 && v1>maxx){ \r\n    vM1 = tV1*maxx;\r\n    vM2 = tV2*maxx*(v2/v1);\r\n    vM3 = tV3*maxx*(v3/v1);\r\n    vM4 = tV4*maxx*(v4/v1);\r\n  }\r\n\r\n  if(v2>v1 && v2>v3 && v2>v4 && v2>maxx){  \r\n    vM1 = tV1*maxx*(v1/v2);\r\n    vM2 = tV2*maxx;\r\n    vM3 = tV3*maxx*(v3/v2);\r\n    vM4 = tV4*maxx*(v4/v2);\r\n  }\r\n\r\n  if(v3>v1 && v3>v2 && v3>v4 && v3>maxx){  \r\n    vM1 = tV1*maxx*(v1/v3);\r\n    vM2 = tV2*maxx*(v2/v3);\r\n    vM3 = tV3*maxx;\r\n    vM4 = tV4*maxx*(v4/v3);\r\n  }\r\n\r\n  if(v4>v1 && v4>v2 && v4>v3 && v4>maxx){  \r\n    vM1 = tV1*maxx*(v1/v4);\r\n    vM2 = tV2*maxx*(v2/v4);\r\n    vM3 = tV3*maxx*(v3/v4);\r\n    vM4 = tV4*maxx;\r\n  }\r\n\r\n  pRF = vM1;\r\n  pRR = vM2;\r\n  pLR = vM3;\r\n  pLF = vM4;\r\n\r\n  \r\n}\r\n \r\n"}}}Content-Length: 1145

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/USM/USEROS2023/Arduino/Joystick-ESP32-NEW/Variabel.h","languageId":"cpp","version":1,"text":"typedef String str; \r\n\r\n#define MAXPWM 255\r\n#define MINPWM 30\r\n\r\n#define addEE 0\r\n\r\nbool setMode = 0;\r\n\r\nbyte setValue[2];\r\n\r\n//joystick variable \r\nint xL=0, yL=0, xR=0, yR=0;\r\nbool X=0,S=0,T=0,C=0;\r\nbool up=0,dw=0,lf=0,rg=0;\r\nbool L1=0,L2=0,L3=0,R1=0,R2=0,R3=0;\r\nint AL2=0,AR2=0;\r\nbool SELECT=0, START=0;   \r\nuint8_t BATT=0;   \r\n\r\nuint16_t dataTombol = 0;\r\n\r\nbyte SPEED = 0, SPEEDR;\r\nint pwmX, pwmY, pwmW;\r\nfloat maxPWM=100;\r\n\r\nfloat pLF=0;\r\nfloat pRF=0;\r\nfloat pLR=0;\r\nfloat pRR=0;\r\n\r\nstruct valEE {   \r\n  uint8_t SPEED[3] = {70, 180, 255};\r\n  uint8_t SPEEDR[3] = {70, 180, 255};  \r\n}; valEE EE; \r\n\r\nbyte modeSpeed = 1;\r\n\r\nbool joyConnect = 0;\r\nbool changeValue = 0;\r\n\r\nunsigned long previousMillis = 0, previousMillis1 = 0; \r\n\r\n#define maxModeSpeed 3\r\nString tampilModeSpeed[maxModeSpeed] = {\r\n  \"SLOW   : \",\r\n  \"NORMAL : \",\r\n  \"FAST   : \",\r\n};\r\n"}}}